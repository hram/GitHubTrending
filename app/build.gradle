buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.5'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'realm-android'
apply from: '../config/quality/quality.gradle'
apply plugin: 'android-soexcluder'
apply plugin: 'spoon'
apply plugin: 'com.github.triplet.play'

repositories {
    maven { url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo' }
    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com" }
    maven { url 'https://maven.fabric.io/public' }
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName] != null ? props[propName] : "\"define config field: " + propName + "\""
    } else {
        return "\"define config file local.properties\"";
    }
}

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "hram.githubtrending"
        minSdkVersion 19
        targetSdkVersion 27
        versionName rootProject.versionName
        versionCode rootProject.versionCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "URL_BASE", '"https://github.com"'
//        buildConfigField "String", "TELEGRAM_BOT_TOKEN", System.getenv("TELEGRAM_BOT_TOKEN")
    }

    signingConfigs {
        release {
            storeFile file(getProps("KEYSTORE"))
            storePassword getProps("STOREPASS")
            keyAlias getProps("KEYALIAS")
            keyPassword getProps("KEYPASS")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            applicationIdSuffix ".debug"
            ext.enableCrashlytics = false
        }
    }

    flavorDimensions "single"

    productFlavors {
        realm {
            dimension "single"
        }
        freezer {
            dimension "single"
        }
        realtimeDatabase {
            dimension "single"
        }
        room {
            dimension "single"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    dexOptions {
        preDexLibraries true
        maxProcessCount 8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dexOptions {
        jumboMode true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.0.1'
    implementation 'com.android.support:recyclerview-v7:27.0.1'
    implementation 'com.android.support:design:27.0.1'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:2.1.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:2.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.arello-mobile:moxy:1.5.3'
    implementation 'com.arello-mobile:moxy-app-compat:1.5.3'
    testCompile('junit:junit:4.12') {
        exclude group: 'org.hamcrest'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.9.0'
    annotationProcessor 'com.arello-mobile:moxy-compiler:1.5.3'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    realmCompile 'com.uphyca:stetho_realm:2.0.0'
    implementation 'com.airbnb.android:lottie:2.0.0'

    implementation "com.google.dagger:dagger:2.9"
    annotationProcessor "com.google.dagger:dagger-compiler:2.9"
    provided 'javax.annotation:jsr250-api:1.0'


    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'support-annotations'
    })
    androidTestCompile 'com.squareup.okhttp3:mockwebserver:3.9.0'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.7.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    implementation 'fr.xebia.android.freezer:freezer:2.1.0'
    provided 'fr.xebia.android.freezer:freezer-annotations:2.1.0'
    annotationProcessor 'fr.xebia.android.freezer:freezer-compiler:2.1.0'
    implementation 'com.github.viethoa:fastscroller:1.2.0'
    testCompile "org.robolectric:robolectric:3.3.2"
    testCompile 'com.github.pengrad:java-telegram-bot-api:3.1.0'
    implementation 'com.google.code.gson:gson:2.8.1'

    implementation 'com.github.florent37:rxjsoup:1.0.4'
    implementation 'com.github.florent37:retrojsoup:1.0.4'
    annotationProcessor 'com.github.florent37:retrojsoup-compiler:1.0.4'
    implementation 'com.google.firebase:firebase-core:11.6.0'
    implementation 'com.google.firebase:firebase-database:11.6.0'

    implementation 'com.android.support:leanback-v17:27.0.1'

    def room_version = "1.1.1"

    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"

    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"
}

soexcluder {
    freezer {
        exclude 'lib/mips/librealm-jni.so'
        exclude 'lib/x86_64/librealm-jni.so'
        exclude 'lib/x86/librealm-jni.so'
        exclude 'lib/arm64-v8a/librealm-jni.so'
        exclude 'lib/armeabi-v7a/librealm-jni.so'
    }
}

spoon {
    // for debug output
    debug = true

    // To run a single test class
    //className = 'fully.qualified.TestCase'

    // To run a single method in TestCase
    //methodName = 'testMyApp'

    // To execute the tests device by device */
    sequential = true

    // To grant permissions to Android M >= devices */
    grantAllPermissions = true
}

play {
    track = 'alpha'
    serviceAccountEmail = getProps("SERVICE_ACCOUNT_EMAIL")
    serviceAccountCredentials = file(getProps("PK_12_FILE"))
}

apply plugin: 'com.google.gms.google-services'